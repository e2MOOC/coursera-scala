<?xml version="1.0" encoding="UTF-8"?><testrun name="scala" project="forcomp" tests="11" started="11" failures="0" errors="4" ignored="0">
  <testsuite name="forcomp.AnagramsSuite" time="0.433">
    <testcase name="wordOccurrences: abcd" classname="forcomp.AnagramsSuite" time="0.036"/>
    <testcase name="wordOccurrences: Robert" classname="forcomp.AnagramsSuite" time="0.001"/>
    <testcase name="sentenceOccurrences: abcd e" classname="forcomp.AnagramsSuite" time="0.002"/>
    <testcase name="dictionaryByOccurrences.get: eat" classname="forcomp.AnagramsSuite" time="0.354"/>
    <testcase name="word anagrams: married" classname="forcomp.AnagramsSuite" time="0.002"/>
    <testcase name="word anagrams: player" classname="forcomp.AnagramsSuite" time="0.001"/>
    <testcase name="subtract: lard - r" classname="forcomp.AnagramsSuite" time="0.025">
      <error>org.scalatest.exceptions.TestFailedException: List((a,1), (d,1), (l,1), (r,0)) did not equal List((a,1), (d,1), (l,1))&#13;
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:500)&#13;
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1555)&#13;
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:466)&#13;
	at forcomp.AnagramsSuite$$anonfun$7.apply$mcV$sp(AnagramsSuite.scala:46)&#13;
	at forcomp.AnagramsSuite$$anonfun$7.apply(AnagramsSuite.scala:42)&#13;
	at forcomp.AnagramsSuite$$anonfun$7.apply(AnagramsSuite.scala:42)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)&#13;
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)&#13;
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:20)&#13;
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1122)&#13;
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)&#13;
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:381)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)&#13;
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:1424)&#13;
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)&#13;
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuite.run(FunSuite.scala:1555)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:99)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="combinations: []" classname="forcomp.AnagramsSuite" time="0.001">
      <error>java.lang.UnsupportedOperationException: empty.reduceLeft&#13;
	at scala.collection.LinearSeqOptimized$class.reduceLeft(LinearSeqOptimized.scala:137)&#13;
	at scala.collection.immutable.List.reduceLeft(List.scala:84)&#13;
	at scala.collection.TraversableOnce$class.reduce(TraversableOnce.scala:208)&#13;
	at scala.collection.AbstractTraversable.reduce(Traversable.scala:104)&#13;
	at forcomp.Anagrams$.combinations(Anagrams.scala:87)&#13;
	at forcomp.AnagramsSuite$$anonfun$8.apply$mcV$sp(AnagramsSuite.scala:51)&#13;
	at forcomp.AnagramsSuite$$anonfun$8.apply(AnagramsSuite.scala:51)&#13;
	at forcomp.AnagramsSuite$$anonfun$8.apply(AnagramsSuite.scala:51)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)&#13;
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)&#13;
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:20)&#13;
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1122)&#13;
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)&#13;
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:381)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)&#13;
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:1424)&#13;
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)&#13;
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuite.run(FunSuite.scala:1555)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:99)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="combinations: abba" classname="forcomp.AnagramsSuite" time="0.008">
      <error>org.scalatest.exceptions.TestFailedException: Set(List((a,1)), List((b,1))) did not equal Set(List((a,1)), List((b,1)), List((b,2)), List((a,1), (b,1)), List(), List((a,2), (b,1)), List((a,2)), List((a,1), (b,2)), List((a,2), (b,2)))&#13;
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:500)&#13;
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1555)&#13;
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:466)&#13;
	at forcomp.AnagramsSuite$$anonfun$9.apply$mcV$sp(AnagramsSuite.scala:67)&#13;
	at forcomp.AnagramsSuite$$anonfun$9.apply(AnagramsSuite.scala:54)&#13;
	at forcomp.AnagramsSuite$$anonfun$9.apply(AnagramsSuite.scala:54)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)&#13;
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)&#13;
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:20)&#13;
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1122)&#13;
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)&#13;
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:381)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)&#13;
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:1424)&#13;
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)&#13;
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuite.run(FunSuite.scala:1555)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:99)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="sentence anagrams: []" classname="forcomp.AnagramsSuite" time="0.0"/>
    <testcase name="sentence anagrams: Linux rulez" classname="forcomp.AnagramsSuite" time="0.002">
      <error>org.scalatest.exceptions.TestFailedException: Set() did not equal Set(List("Zulu", "nil", "Rex"), List("null", "Uzi", "Rex"), List("Zulu", "Lin", "Rex"), List("Uzi", "null", "Rex"), List("Uzi", "Rex", "null"), List("Rex", "Uzi", "null"), List("Lin", "Rex", "Zulu"), List("nil", "Rex", "Zulu"), List("nil", "Zulu", "Rex"), List("null", "Rex", "Uzi"), List("Rex", "Zulu", "Lin"), List("Rex", "nil", "Zulu"), List("Rex", "null", "Uzi"), List("Zulu", "Rex", "Lin"), List("Zulu", "Rex", "nil"), List("rulez", "Linux"), List("Rex", "Lin", "Zulu"), List("Rex", "Zulu", "nil"), List("Lin", "Zulu", "Rex"), List("Linux", "rulez"))&#13;
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:500)&#13;
	at org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1555)&#13;
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:466)&#13;
	at forcomp.AnagramsSuite$$anonfun$11.apply$mcV$sp(AnagramsSuite.scala:100)&#13;
	at forcomp.AnagramsSuite$$anonfun$11.apply(AnagramsSuite.scala:76)&#13;
	at forcomp.AnagramsSuite$$anonfun$11.apply(AnagramsSuite.scala:76)&#13;
	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)&#13;
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)&#13;
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:22)&#13;
	at org.scalatest.Transformer.apply(Transformer.scala:20)&#13;
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:166)&#13;
	at org.scalatest.Suite$class.withFixture(Suite.scala:1122)&#13;
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:163)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:175)&#13;
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)&#13;
	at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:175)&#13;
	at org.scalatest.FunSuite.runTest(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:208)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)&#13;
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)&#13;
	at scala.collection.immutable.List.foreach(List.scala:381)&#13;
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)&#13;
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)&#13;
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)&#13;
	at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:208)&#13;
	at org.scalatest.FunSuite.runTests(FunSuite.scala:1555)&#13;
	at org.scalatest.Suite$class.run(Suite.scala:1424)&#13;
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1555)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:212)&#13;
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)&#13;
	at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:212)&#13;
	at org.scalatest.FunSuite.run(FunSuite.scala:1555)&#13;
	at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:99)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
